// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Data;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20221005144427_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("backend.Entities.Classroom", b =>
                {
                    b.Property<int>("ClassroomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassroomId"), 1L, 1);

                    b.Property<string>("ClassroomName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClassroomId");

                    b.ToTable("Classroom", (string)null);

                    b.HasData(
                        new
                        {
                            ClassroomId = 1,
                            ClassroomName = "10 Sinh"
                        },
                        new
                        {
                            ClassroomId = 2,
                            ClassroomName = "10 Toan"
                        });
                });

            modelBuilder.Entity("backend.Entities.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"), 1L, 1);

                    b.Property<int>("ClassroomId")
                        .HasColumnType("int");

                    b.Property<string>("ClassroomName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsDiabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFirstLogin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("StudentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("StudentId");

                    b.HasIndex("ClassroomId");

                    b.ToTable("Student");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            ClassroomId = 1,
                            ClassroomName = "10 Sinh",
                            DateOfBirth = new DateTime(2000, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Le",
                            Gender = 1,
                            IsDiabled = false,
                            IsFirstLogin = false,
                            LastName = "Thi Van",
                            PasswordHash = "$2a$11$BuROAYK3JmJVkhoNYA8CHOBkFtenroNnhHM2fZyXOOAb9bYfEjBxe",
                            Role = 2,
                            StudentCode = "ST1",
                            UserName = "Student1"
                        },
                        new
                        {
                            StudentId = 2,
                            ClassroomId = 1,
                            ClassroomName = "10 Sinh",
                            DateOfBirth = new DateTime(2000, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nguyen",
                            Gender = 0,
                            IsDiabled = false,
                            IsFirstLogin = false,
                            LastName = "Van A",
                            PasswordHash = "$2a$11$/1t2OHU4VDHkRfZpy8./YObajrKn4VA1nrMUDo3m0Y3zF8e3K4HFG",
                            Role = 2,
                            StudentCode = "ST2",
                            UserName = "Student2"
                        },
                        new
                        {
                            StudentId = 3,
                            ClassroomId = 2,
                            ClassroomName = "10 Toan",
                            DateOfBirth = new DateTime(2000, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nguyen",
                            Gender = 0,
                            IsDiabled = false,
                            IsFirstLogin = false,
                            LastName = "Van B",
                            PasswordHash = "$2a$11$lajNbRSbrWTvGPJWPwk1n.Q/cd3jN9j2G8suCDwcotVgWkC7S2ul2",
                            Role = 2,
                            StudentCode = "ST4",
                            UserName = "Student3"
                        });
                });

            modelBuilder.Entity("backend.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsDiabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFirstLogin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("UserCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("UserId");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            DateOfBirth = new DateTime(2000, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Dao",
                            Gender = 0,
                            IsDiabled = false,
                            IsFirstLogin = false,
                            LastName = "Quy Vuong",
                            PasswordHash = "$2a$11$gKsrf/Zfxt5SfA3btVG6fe4etC5iycBSV26h.ufDGzM80Snl7fVTu",
                            Role = 0,
                            UserCode = "AD1",
                            UserName = "Admin"
                        },
                        new
                        {
                            UserId = 2,
                            DateOfBirth = new DateTime(2000, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Do",
                            Gender = 0,
                            IsDiabled = false,
                            IsFirstLogin = false,
                            LastName = "Duy Nam",
                            PasswordHash = "$2a$11$l1a2WQ8Mn8C4/aiNAJKk4u9r8uDzykd4bG0V3exf./Ld99IKak5ge",
                            Role = 1,
                            UserCode = "TC1",
                            UserName = "Teacher"
                        });
                });

            modelBuilder.Entity("backend.Entities.Student", b =>
                {
                    b.HasOne("backend.Entities.Classroom", "Classroom")
                        .WithMany("Students")
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Classroom");
                });

            modelBuilder.Entity("backend.Entities.Classroom", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
